{"version":3,"sources":["common/Button/styles.ts","common/Button/index.tsx","components/ContentBlock/RightContentBlock/styles.ts","components/ContentBlock/LeftContentBlock/styles.ts","components/ContentBlock/LeftContentBlock/index.tsx","components/ContentBlock/RightContentBlock/index.tsx","components/ContentBlock/index.tsx"],"names":["StyledButton","styled","p","color","Button","fixedWidth","children","onClick","RightBlockContainer","Content","ContentWrapper","ButtonWrapper","LeftContentSection","ServiceWrapper","MinTitle","MinPara","withTranslation","icon","title","content","section","t","id","justify","align","lg","md","sm","xs","delay","direction","className","map","item","span","button","document","getElementById","scrollIntoView","behavior","scrollTo","SvgIcon","src","width","height","ContentBlock","props","type","RightContentBlock"],"mappings":"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","file":"static/js/7.3a9cd200.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledButton = styled(\"button\")<any>`\n  background: ${(p) => p.color || \"#1b46c2\"};\n  color: ${(p) => (p.color ? \"#1b46c2\" : \"#fff\")};\n  font-size: 1rem;\n  font-weight: 700;\n  width: 100%;\n  border: 1px solid #edf3f5;\n  border-radius: 15px;\n  padding: 13px 0;\n  cursor: pointer;\n  margin-top: 0.625rem;\n  max-width: 180px;\n  transition: all 0.3s ease-in-out;\n  box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\n\n  &:hover,\n  &:active,\n  &:focus {\n    color: #fff;\n    border: 1px solid black;\n    background-color: black;\n  }\n`;\n","import { StyledButton } from \"./styles\";\nimport { ButtonProps } from \"../types\";\n\nexport const Button = ({\n  color,\n  fixedWidth,\n  children,\n  onClick,\n}: ButtonProps) => (\n  <StyledButton color={color} fixedWidth={fixedWidth} onClick={onClick}>\n    {children}\n  </StyledButton>\n);\n","import styled from \"styled-components\";\n\nexport const RightBlockContainer = styled(\"section\")`\n  position: relative;\n  padding: 10rem 0 8rem;\n\n  @media only screen and (max-width: 1024px) {\n    padding: 8rem 0 6rem;\n  }\n\n  @media only screen and (max-width: 768px) {\n    padding: 4rem 0 3rem;\n  }\n`;\n\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n`;\n\nexport const ContentWrapper = styled(\"div\")`\n  position: relative;\n  max-width: 540px;\n\n  @media only screen and (max-width: 575px) {\n    padding-bottom: 4rem;\n  }\n`;\n\nexport const ButtonWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n\n  @media screen and (min-width: 1024px) {\n    max-width: 80%;\n  }\n\n  button:last-child {\n    margin-left: 20px;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const LeftContentSection = styled(\"section\")`\n  position: relative;\n  padding: 10rem 0 8rem;\n\n  @media only screen and (max-width: 1024px) {\n    padding: 4rem 0 4rem;\n  }\n`;\n\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n`;\n\nexport const ContentWrapper = styled(\"div\")`\n  position: relative;\n  max-width: 540px;\n\n  @media only screen and (max-width: 575px) {\n    padding-top: 4rem;\n  }\n`;\n\nexport const ServiceWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n`;\n\nexport const MinTitle = styled(\"h1\")`\n  font-size: 15px;\n  line-height: 1rem;\n  padding: 0.5rem 0;\n  text-transform: uppercase;\n  color: #000;\n  font-family: \"Motiva Sans Light\", sans-serif;\n`;\n\nexport const MinPara = styled(\"p\")`\n  font-size: 13px;\n`;\n","import { Row, Col } from \"antd\";\nimport { withTranslation } from \"react-i18next\";\nimport { SvgIcon } from \"../../../common/SvgIcon\";\nimport { ContentBlockProps } from \"../types\";\nimport { Fade } from \"react-awesome-reveal\";\nimport {\n  LeftContentSection,\n  Content,\n  ContentWrapper,\n  ServiceWrapper,\n  MinTitle,\n  MinPara,\n} from \"./styles\";\n\nconst LeftContentBlock = ({\n  icon,\n  title,\n  content,\n  section,\n  t,\n  id,\n}: ContentBlockProps) => {\n  return (\n    <LeftContentSection>\n     \n        <Row justify=\"space-between\" align=\"middle\" id={id}>\n        \n          <Col lg={11} md={11} sm={12} xs={24}>\n            <Fade delay={0} direction=\"up\">\n              <main>\n                <section className=\"cards\">\n                  <div className=\"card pika animated\"></div>\n                </section>\n              </main>\n            </Fade>\n          </Col>\n         \n          <Col lg={11} md={11} sm={11} xs={24}>\n            <ContentWrapper>\n            <Fade delay={100} direction=\"up\">\n              <h1>{t(title)}</h1>\n            </Fade>\n            <Fade delay={300} direction=\"up\">\n              <Content>{t(content)}</Content>\n              </Fade>\n              <ServiceWrapper>\n                <Row justify=\"space-between\">\n                  {typeof section === \"object\" &&\n                    section.map((item: any, id: number) => {\n                      return (\n                        \n                        <Col key={id} span={11}>\n                          <Fade delay={400} direction=\"up\">\n                          <MinTitle>{t(item.title)}</MinTitle>\n                          </Fade>\n                          <Fade delay={500} direction=\"up\">\n                          <MinPara>{t(item.content)}</MinPara>\n                          </Fade>\n                        </Col>\n                        \n                      );\n                    })}\n                </Row>\n              </ServiceWrapper>\n            </ContentWrapper>\n          </Col>\n        </Row>\n\n    </LeftContentSection>\n  );\n};\n\nexport default withTranslation()(LeftContentBlock);\n","import { Row, Col } from \"antd\";\nimport { withTranslation } from \"react-i18next\";\nimport { SvgIcon } from \"../../../common/SvgIcon\";\nimport { Button } from \"../../../common/Button\";\nimport { ContentBlockProps } from \"../types\";\nimport { Fade } from \"react-awesome-reveal\";\nimport {\n  RightBlockContainer,\n  Content,\n  ContentWrapper,\n  ButtonWrapper,\n} from \"./styles\";\n\nconst RightBlock = ({\n  title,\n  content,\n  button,\n  icon,\n  t,\n  id,\n}: ContentBlockProps) => {\n  const scrollTo = (id: string) => {\n    const element = document.getElementById(id) as HTMLDivElement;\n    element.scrollIntoView({\n      behavior: \"smooth\",\n    });\n  };\n  return (\n    <RightBlockContainer>\n      <Fade direction=\"up\">\n        <Row justify=\"space-between\" align=\"middle\" id={id}>\n          <Col lg={11} md={11} sm={11} xs={24}>\n            <ContentWrapper>\n              <h1>{t(title)}</h1>\n              <Content>{t(content)}</Content>\n              <ButtonWrapper>\n                {typeof button === \"object\" &&\n                  button.map((item: any, id: number) => {\n                    return (\n                      <Button\n                        key={id}\n                        color={item.color}\n                        fixedWidth={true}\n                        onClick={() => scrollTo(\"about\")}\n                      >\n                        {t(item.title)}\n                      </Button>\n                    );\n                  })}\n              </ButtonWrapper>\n            </ContentWrapper>\n          </Col>\n          <Col lg={11} md={11} sm={12} xs={24}>\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\n          </Col>\n        </Row>\n      </Fade>\n    </RightBlockContainer>\n  );\n};\n\nexport default withTranslation()(RightBlock);\n","import LeftContentBlock from \"./LeftContentBlock\";\nimport RightContentBlock from \"./RightContentBlock\";\nimport { ContentBlockProps } from \"./types\";\n\nconst ContentBlock = (props: ContentBlockProps) => {\n  if (props.type === \"left\") return <LeftContentBlock {...props} />;\n  if (props.type === \"right\") return <RightContentBlock {...props} />;\n  return null;\n};\n\nexport default ContentBlock;\n"],"sourceRoot":""}